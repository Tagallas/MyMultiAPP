#: import MDRaisedButton kivymd.uix.button.MDRaisedButton
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import MDFadeSlideTransition kivymd.uix.transition.MDFadeSlideTransition

<ToDoList>
    id: to_do_list
    NavigationDrawerScreenManager:
        id: screen_manager
        transition: FadeTransition()

        # 1
        MDScreen:
            id: screen
            name: 'screen'
            MDTopAppBar:
                id: app_bar
                title: root.items
                pos_hint: {"top": 1}
                #elevation: 9
                md_bg_color: (.1, .2, .6, .85)
                # specific_text_color: "#4a4939"
                left_action_items: [["menu", lambda x: nav_drawer.set_state("toggle")], ["arrow-left", lambda x: root.parent.parent.on_press_menu()]]
                right_action_items: [["sort", lambda x: root.sort()],]

            MDScrollView:
                size_hint_y: None
                height: screen.height - app_bar.height
                pos_hint: {"top": (screen.height - app_bar.height) / screen.height}
                MainView:
                    id: main_screen
                    #pos_hint: {"top": 1}
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height

        # 2
        MDScreen:
            id: calendar
            name: 'calendar'
            MDTopAppBar:
                id: app_bar_calendar
                title: root.items
                pos_hint: {"top": 1}
                #elevation: 9
                md_bg_color: (.1, .2, .6, .85)
                # specific_text_color: "#4a4939"
                left_action_items: [["menu", lambda x: nav_drawer.set_state("toggle")], ["arrow-left", lambda x: root.parent.parent.on_press_menu()],]
                                        #["arrow-left", lambda x: calendar_view.left_arrow()]]
                right_action_items: [["sort", lambda x: root.sort()],["arrow-right", lambda x: calendar_view.right_arrow()]]

            MDScrollView:
                size_hint_y: None
                height: screen.height - app_bar.height
                pos_hint: {"top": (screen.height - app_bar.height) / screen.height}
                CalendarView:
                    id: calendar_view
                    #orientation: 'vertical'
                    size_hint_y: None
                    #height: 0

        # 3
        EditScreen:
            id: edit_screen
            name: 'edit_screen'

        # 4
        MDScreen:
            id: camara_screen
            name: 'camera_screen'
            CameraLayout:
                id: camera_layout
                orientation: 'vertical'

        # 5
        MDScreen:
            id: trash_can
            name: 'trash_can'

            MDTopAppBar:
                id: app_bar_2
                title: 'Trash Can'
                pos_hint: {"top": 1}
                #elevation: 9
                md_bg_color: (.1, .2, .6, .85)
                # specific_text_color: "#4a4939"
                left_action_items: [["menu", lambda x: nav_drawer.set_state("toggle")], ["arrow-left", lambda x: root.parent.parent.on_press_menu()]]
                right_action_items: [["trash-can-outline", lambda x: root.delete_trash_dialog()],]

            MDScrollView:
                size_hint_y: None
                height: screen.height - app_bar.height
                pos_hint: {"top": (screen.height - app_bar.height) / screen.height}
                TrashCanView:
                    id: trash_can_view
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height


    MDNavigationDrawer:
        id: nav_drawer
        radius: (0, 16, 16, 0)
        size_hint: .7, 1
        type: "standard"
        close_on_click: True

        MDScrollView:
            CustomNavigationDrawer: #nic nie dodawaj bo sie usunie
                id: md_list_nav_drawer

<CalendarBar>
    md_bg_color: (.1, .2, .6, .85)
    orientation: 'horizontal'

<TaskLabel>
    canvas.before:
        Color:
            rgba: (.1,.1,.1,1)
        Rectangle:
            pos: self.pos
            size: self.size
<Task>
    canvas.before:
        Color:
            rgba: (0,0,0,1)
        Rectangle:
            pos: self.pos
            size: self.size

